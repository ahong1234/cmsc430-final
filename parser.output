Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';'
    3                | error ';'

    4 optional_variable: optional_variable variable
    5                  | /* empty */

    6 variable: IDENTIFIER ':' type IS statement_
    7         | error ';'

    8 optional_parameters: params
    9                    | /* empty */

   10 params: params ',' parameter
   11       | parameter

   12 parameter: IDENTIFIER ':' type

   13 type: INTEGER
   14     | BOOLEAN
   15     | REAL

   16 body: BEGIN_ statement_ END ';'

   17 statement_: statement ';'
   18           | error ';'

   19 statement: expression
   20          | REDUCE operator reductions ENDREDUCE
   21          | IF expression THEN statement_ ELSE statement_ ENDIF
   22          | CASE expression IS case OTHERS ARROW statement_ ENDCASE

   23 case: case WHEN INT_LITERAL ARROW statement_
   24     | error ';'
   25     | /* empty */

   26 operator: ADDOP
   27         | MULOP

   28 reductions: reductions statement_
   29           | /* empty */

   30 expression: expression OROP and
   31           | and

   32 and: and ANDOP relation
   33    | relation

   34 relation: relation RELOP term
   35         | term

   36 term: term ADDOP factor
   37     | factor

   38 factor: factor MULOP exponent
   39       | factor REMOP exponent
   40       | exponent

   41 exponent: unary
   42         | unary EXPOP primary

   43 unary: NOTOP primary
   44      | primary

   45 primary: '(' expression ')'
   46        | INT_LITERAL
   47        | REAL_LITERAL
   48        | BOOL_LITERAL
   49        | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 45
')' (41) 45
',' (44) 10
':' (58) 6 12
';' (59) 2 3 7 16 17 18 24
error (256) 3 7 18 24
IDENTIFIER (258) 2 6 12 49
INT_LITERAL (259) 23 46
BOOL_LITERAL (260) 48
REAL_LITERAL (261) 47
ADDOP (262) 26 36
MULOP (263) 27 38
RELOP (264) 34
ANDOP (265) 32
REMOP (266) 39
OROP (267) 30
EXPOP (268) 42
NOTOP (269) 43
BEGIN_ (270) 16
BOOLEAN (271) 14
END (272) 16
ENDREDUCE (273) 20
FUNCTION (274) 2
INTEGER (275) 13
IS (276) 6 22
REDUCE (277) 20
RETURNS (278) 2
ARROW (279) 22 23
CASE (280) 22
ELSE (281) 21
ENDCASE (282) 22
ENDIF (283) 21
IF (284) 21
OTHERS (285) 22
REAL (286) 15
THEN (287) 21
WHEN (288) 23


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
function (40)
    on left: 1, on right: 0
function_header (41)
    on left: 2 3, on right: 1
optional_variable (42)
    on left: 4 5, on right: 1 4
variable (43)
    on left: 6 7, on right: 4
optional_parameters (44)
    on left: 8 9, on right: 2
params (45)
    on left: 10 11, on right: 8 10
parameter (46)
    on left: 12, on right: 10 11
type (47)
    on left: 13 14 15, on right: 2 6 12
body (48)
    on left: 16, on right: 1
statement_ (49)
    on left: 17 18, on right: 6 16 21 22 23 28
statement (50)
    on left: 19 20 21 22, on right: 17
case (51)
    on left: 23 24 25, on right: 22 23
operator (52)
    on left: 26 27, on right: 20
reductions (53)
    on left: 28 29, on right: 20 28
expression (54)
    on left: 30 31, on right: 19 21 22 30 45
and (55)
    on left: 32 33, on right: 30 31 32
relation (56)
    on left: 34 35, on right: 32 33 34
term (57)
    on left: 36 37, on right: 34 35 36
factor (58)
    on left: 38 39 40, on right: 36 37 38 39
exponent (59)
    on left: 41 42, on right: 38 39 40
unary (60)
    on left: 43 44, on right: 41 42
primary (61)
    on left: 45 46 47 48 49, on right: 42 43 44


state 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


state 1

    3 function_header: error . ';'

    ';'  shift, and go to state 5


state 2

    2 function_header: FUNCTION . IDENTIFIER optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


state 3

    0 $accept: function . $end

    $end  shift, and go to state 7


state 4

    1 function: function_header . optional_variable body

    $default  reduce using rule 5 (optional_variable)

    optional_variable  go to state 8


state 5

    3 function_header: error ';' .

    $default  reduce using rule 3 (function_header)


state 6

    2 function_header: FUNCTION IDENTIFIER . optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 9 (optional_parameters)

    optional_parameters  go to state 10
    params               go to state 11
    parameter            go to state 12


state 7

    0 $accept: function $end .

    $default  accept


state 8

    1 function: function_header optional_variable . body
    4 optional_variable: optional_variable . variable

    error       shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    BEGIN_      shift, and go to state 15

    variable  go to state 16
    body      go to state 17


state 9

   12 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 18


state 10

    2 function_header: FUNCTION IDENTIFIER optional_parameters . RETURNS type ';'

    RETURNS  shift, and go to state 19


state 11

    8 optional_parameters: params .
   10 params: params . ',' parameter

    ','  shift, and go to state 20

    $default  reduce using rule 8 (optional_parameters)


state 12

   11 params: parameter .

    $default  reduce using rule 11 (params)


state 13

    7 variable: error . ';'

    ';'  shift, and go to state 21


state 14

    6 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 22


state 15

   16 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    REDUCE        shift, and go to state 29
    CASE          shift, and go to state 30
    IF            shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 33
    statement   go to state 34
    expression  go to state 35
    and         go to state 36
    relation    go to state 37
    term        go to state 38
    factor      go to state 39
    exponent    go to state 40
    unary       go to state 41
    primary     go to state 42


state 16

    4 optional_variable: optional_variable variable .

    $default  reduce using rule 4 (optional_variable)


state 17

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


state 18

   12 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 43
    INTEGER  shift, and go to state 44
    REAL     shift, and go to state 45

    type  go to state 46


state 19

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS . type ';'

    BOOLEAN  shift, and go to state 43
    INTEGER  shift, and go to state 44
    REAL     shift, and go to state 45

    type  go to state 47


state 20

   10 params: params ',' . parameter

    IDENTIFIER  shift, and go to state 9

    parameter  go to state 48


state 21

    7 variable: error ';' .

    $default  reduce using rule 7 (variable)


state 22

    6 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 43
    INTEGER  shift, and go to state 44
    REAL     shift, and go to state 45

    type  go to state 49


state 23

   18 statement_: error . ';'

    ';'  shift, and go to state 50


state 24

   49 primary: IDENTIFIER .

    $default  reduce using rule 49 (primary)


state 25

   46 primary: INT_LITERAL .

    $default  reduce using rule 46 (primary)


state 26

   48 primary: BOOL_LITERAL .

    $default  reduce using rule 48 (primary)


state 27

   47 primary: REAL_LITERAL .

    $default  reduce using rule 47 (primary)


state 28

   43 unary: NOTOP . primary

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    '('           shift, and go to state 32

    primary  go to state 51


state 29

   20 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53

    operator  go to state 54


state 30

   22 statement: CASE . expression IS case OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    expression  go to state 55
    and         go to state 36
    relation    go to state 37
    term        go to state 38
    factor      go to state 39
    exponent    go to state 40
    unary       go to state 41
    primary     go to state 42


state 31

   21 statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    expression  go to state 56
    and         go to state 36
    relation    go to state 37
    term        go to state 38
    factor      go to state 39
    exponent    go to state 40
    unary       go to state 41
    primary     go to state 42


state 32

   45 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    expression  go to state 57
    and         go to state 36
    relation    go to state 37
    term        go to state 38
    factor      go to state 39
    exponent    go to state 40
    unary       go to state 41
    primary     go to state 42


state 33

   16 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 58


state 34

   17 statement_: statement . ';'

    ';'  shift, and go to state 59


state 35

   19 statement: expression .
   30 expression: expression . OROP and

    OROP  shift, and go to state 60

    $default  reduce using rule 19 (statement)


state 36

   31 expression: and .
   32 and: and . ANDOP relation

    ANDOP  shift, and go to state 61

    $default  reduce using rule 31 (expression)


state 37

   33 and: relation .
   34 relation: relation . RELOP term

    RELOP  shift, and go to state 62

    $default  reduce using rule 33 (and)


state 38

   35 relation: term .
   36 term: term . ADDOP factor

    ADDOP  shift, and go to state 63

    $default  reduce using rule 35 (relation)


state 39

   37 term: factor .
   38 factor: factor . MULOP exponent
   39       | factor . REMOP exponent

    MULOP  shift, and go to state 64
    REMOP  shift, and go to state 65

    $default  reduce using rule 37 (term)


state 40

   40 factor: exponent .

    $default  reduce using rule 40 (factor)


state 41

   41 exponent: unary .
   42         | unary . EXPOP primary

    EXPOP  shift, and go to state 66

    $default  reduce using rule 41 (exponent)


state 42

   44 unary: primary .

    $default  reduce using rule 44 (unary)


state 43

   14 type: BOOLEAN .

    $default  reduce using rule 14 (type)


state 44

   13 type: INTEGER .

    $default  reduce using rule 13 (type)


state 45

   15 type: REAL .

    $default  reduce using rule 15 (type)


state 46

   12 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 12 (parameter)


state 47

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type . ';'

    ';'  shift, and go to state 67


state 48

   10 params: params ',' parameter .

    $default  reduce using rule 10 (params)


state 49

    6 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 68


state 50

   18 statement_: error ';' .

    $default  reduce using rule 18 (statement_)


state 51

   43 unary: NOTOP primary .

    $default  reduce using rule 43 (unary)


state 52

   26 operator: ADDOP .

    $default  reduce using rule 26 (operator)


state 53

   27 operator: MULOP .

    $default  reduce using rule 27 (operator)


state 54

   20 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 29 (reductions)

    reductions  go to state 69


state 55

   22 statement: CASE expression . IS case OTHERS ARROW statement_ ENDCASE
   30 expression: expression . OROP and

    OROP  shift, and go to state 60
    IS    shift, and go to state 70


state 56

   21 statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   30 expression: expression . OROP and

    OROP  shift, and go to state 60
    THEN  shift, and go to state 71


state 57

   30 expression: expression . OROP and
   45 primary: '(' expression . ')'

    OROP  shift, and go to state 60
    ')'   shift, and go to state 72


state 58

   16 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 73


state 59

   17 statement_: statement ';' .

    $default  reduce using rule 17 (statement_)


state 60

   30 expression: expression OROP . and

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    and       go to state 74
    relation  go to state 37
    term      go to state 38
    factor    go to state 39
    exponent  go to state 40
    unary     go to state 41
    primary   go to state 42


state 61

   32 and: and ANDOP . relation

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    relation  go to state 75
    term      go to state 38
    factor    go to state 39
    exponent  go to state 40
    unary     go to state 41
    primary   go to state 42


state 62

   34 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    term      go to state 76
    factor    go to state 39
    exponent  go to state 40
    unary     go to state 41
    primary   go to state 42


state 63

   36 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    factor    go to state 77
    exponent  go to state 40
    unary     go to state 41
    primary   go to state 42


state 64

   38 factor: factor MULOP . exponent

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    exponent  go to state 78
    unary     go to state 41
    primary   go to state 42


state 65

   39 factor: factor REMOP . exponent

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    exponent  go to state 79
    unary     go to state 41
    primary   go to state 42


state 66

   42 exponent: unary EXPOP . primary

    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    '('           shift, and go to state 32

    primary  go to state 80


state 67

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


state 68

    6 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    REDUCE        shift, and go to state 29
    CASE          shift, and go to state 30
    IF            shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 81
    statement   go to state 34
    expression  go to state 35
    and         go to state 36
    relation    go to state 37
    term        go to state 38
    factor      go to state 39
    exponent    go to state 40
    unary       go to state 41
    primary     go to state 42


state 69

   20 statement: REDUCE operator reductions . ENDREDUCE
   28 reductions: reductions . statement_

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    ENDREDUCE     shift, and go to state 82
    REDUCE        shift, and go to state 29
    CASE          shift, and go to state 30
    IF            shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 83
    statement   go to state 34
    expression  go to state 35
    and         go to state 36
    relation    go to state 37
    term        go to state 38
    factor      go to state 39
    exponent    go to state 40
    unary       go to state 41
    primary     go to state 42


state 70

   22 statement: CASE expression IS . case OTHERS ARROW statement_ ENDCASE

    error  shift, and go to state 84

    OTHERS  reduce using rule 25 (case)
    WHEN    reduce using rule 25 (case)

    case  go to state 85


state 71

   21 statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    REDUCE        shift, and go to state 29
    CASE          shift, and go to state 30
    IF            shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 86
    statement   go to state 34
    expression  go to state 35
    and         go to state 36
    relation    go to state 37
    term        go to state 38
    factor      go to state 39
    exponent    go to state 40
    unary       go to state 41
    primary     go to state 42


state 72

   45 primary: '(' expression ')' .

    $default  reduce using rule 45 (primary)


state 73

   16 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 16 (body)


state 74

   30 expression: expression OROP and .
   32 and: and . ANDOP relation

    ANDOP  shift, and go to state 61

    $default  reduce using rule 30 (expression)


state 75

   32 and: and ANDOP relation .
   34 relation: relation . RELOP term

    RELOP  shift, and go to state 62

    $default  reduce using rule 32 (and)


state 76

   34 relation: relation RELOP term .
   36 term: term . ADDOP factor

    ADDOP  shift, and go to state 63

    $default  reduce using rule 34 (relation)


state 77

   36 term: term ADDOP factor .
   38 factor: factor . MULOP exponent
   39       | factor . REMOP exponent

    MULOP  shift, and go to state 64
    REMOP  shift, and go to state 65

    $default  reduce using rule 36 (term)


state 78

   38 factor: factor MULOP exponent .

    $default  reduce using rule 38 (factor)


state 79

   39 factor: factor REMOP exponent .

    $default  reduce using rule 39 (factor)


state 80

   42 exponent: unary EXPOP primary .

    $default  reduce using rule 42 (exponent)


state 81

    6 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 6 (variable)


state 82

   20 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 20 (statement)


state 83

   28 reductions: reductions statement_ .

    $default  reduce using rule 28 (reductions)


state 84

   24 case: error . ';'

    ';'  shift, and go to state 87


state 85

   22 statement: CASE expression IS case . OTHERS ARROW statement_ ENDCASE
   23 case: case . WHEN INT_LITERAL ARROW statement_

    OTHERS  shift, and go to state 88
    WHEN    shift, and go to state 89


state 86

   21 statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 90


state 87

   24 case: error ';' .

    $default  reduce using rule 24 (case)


state 88

   22 statement: CASE expression IS case OTHERS . ARROW statement_ ENDCASE

    ARROW  shift, and go to state 91


state 89

   23 case: case WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 92


state 90

   21 statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    REDUCE        shift, and go to state 29
    CASE          shift, and go to state 30
    IF            shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 93
    statement   go to state 34
    expression  go to state 35
    and         go to state 36
    relation    go to state 37
    term        go to state 38
    factor      go to state 39
    exponent    go to state 40
    unary       go to state 41
    primary     go to state 42


state 91

   22 statement: CASE expression IS case OTHERS ARROW . statement_ ENDCASE

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    REDUCE        shift, and go to state 29
    CASE          shift, and go to state 30
    IF            shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 94
    statement   go to state 34
    expression  go to state 35
    and         go to state 36
    relation    go to state 37
    term        go to state 38
    factor      go to state 39
    exponent    go to state 40
    unary       go to state 41
    primary     go to state 42


state 92

   23 case: case WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 95


state 93

   21 statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 96


state 94

   22 statement: CASE expression IS case OTHERS ARROW statement_ . ENDCASE

    ENDCASE  shift, and go to state 97


state 95

   23 case: case WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    INT_LITERAL   shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    REDUCE        shift, and go to state 29
    CASE          shift, and go to state 30
    IF            shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 98
    statement   go to state 34
    expression  go to state 35
    and         go to state 36
    relation    go to state 37
    term        go to state 38
    factor      go to state 39
    exponent    go to state 40
    unary       go to state 41
    primary     go to state 42


state 96

   21 statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 21 (statement)


state 97

   22 statement: CASE expression IS case OTHERS ARROW statement_ ENDCASE .

    $default  reduce using rule 22 (statement)


state 98

   23 case: case WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 23 (case)
